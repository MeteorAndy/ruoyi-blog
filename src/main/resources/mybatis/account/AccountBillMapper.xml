<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.emmanuel.account.mapper.AccountBillMapper">

    <resultMap type="com.ruoyi.project.emmanuel.account.domain.AccountBill" id="AccountBillResult">
        <result property="month"    column="month"    />
        <result property="pay"    column="pay"    />
        <result property="income"    column="income"    />
        <result property="balance"    column="balance"    />
    </resultMap>

    <sql id="selectAccountBillVo">
        select month, pay, income, balance from account_bill
    </sql>

    <select id="selectAccountBillList" parameterType="AccountBill" resultMap="AccountBillResult">
        <include refid="selectAccountBillVo"/>
        <where>
            <if test="month != null  and month != ''"> and month = #{month}</if>
        </where>
    </select>

    <select id="selectAccountBillByMonth" parameterType="String" resultMap="AccountBillResult">
        <include refid="selectAccountBillVo"/>
        where month = #{month}
    </select>

    <select id="countMoneyByMonth" resultMap="AccountBillResult">
        select
            date_format(m.money_date,'%Y-%m') "month",
            SUM(if(c.class_type = 1,m.money_pay,0)) "pay",
            SUM(IF(c.class_type = 0,m.money_income,0))  "income" from account_account a
        inner join account_user_account ua on a.id = ua.account_id
        left join account_money m on a.id = m.account_id
        left join account_class c on c.id = m.class_id
        <where>
            m.deleted = 0 and m.is_total = 0 and ua.user_id = #{userId}
            <if test="accountBill.accountId != null and accountBill.accountId != ''">
                and m.account_id = #{accountBill.accountId}
            </if>
        <if test="accountBill.month != null and accountBill.month != ''">
            and m.money_date LIKE CONCAT(#{accountBill.month,jdbcType=VARCHAR},'%')
        </if>
    </where>
        GROUP BY date_format(m.money_date,'%Y-%m')
    </select>

    <select id="getAccount" resultType="com.ruoyi.project.emmanuel.account.domain.AccountAccount">
        SELECT id,account_name "accountName" from account_account ORDER BY order_num
    </select>

    <select id="billPayConunt" resultType="com.ruoyi.project.emmanuel.account.domain.AccountBill">
        SELECT LEFT(m.money_date, 7)     "money",
            class_name                "name",
            IFNull(sum(money_pay), 0) "value"
        from account_account a
            inner join account_user_account ua on a.id = ua.account_id
            inner join account_money m on a.id = m.account_id
            inner join account_class c on c.id = m.class_id AND m.deleted = 0
        where left(m.money_date, 7) =  #{month,jdbcType=VARCHAR}
          and c.class_type = 1
          and is_total = 0
          and ua.user_id = #{userId}
        GROUP BY LEFT(m.money_date, 7), class_name
    </select>

    <select id="billIncomeConunt"  resultType="com.ruoyi.project.emmanuel.account.domain.AccountBill">
        SELECT LEFT(m.money_date, 7)        "money",
            class_name                   "name",
            IFNull(sum(money_income), 0) "income"
        from account_account a
            inner join account_user_account ua on a.id = ua.account_id
            inner join account_money m on a.id = m.account_id
            inner join account_class c on c.id = m.class_id
            AND m.deleted = 0
        where left(m.money_date, 7) = #{month,jdbcType=VARCHAR}
          and c.class_type = 0
          and is_total = 0
          and ua.user_id = #{userId}
        GROUP BY LEFT(m.money_date, 7),class_name
    </select>

    <select id="countFullCalendarList" resultType="com.ruoyi.project.emmanuel.account.domain.AccountMoney">
        select sum(IF(c.class_type = 1, money_pay, 0))    as moneyPay,
               sum(IF(c.class_type = 0, money_income, 0)) as moneyIncome,
               money_date                                 as moneyDate
        from account_account a
                 inner join account_user_account ua on a.id = ua.account_id
                 inner join account_money m on a.id = m.account_id
                 inner join account_class c on c.id = m.class_id
        WHERE is_total = 0 and ua.user_id = #{userId}
            and money_date like CONCAT( #{month,jdbcType=VARCHAR},'%') GROUP BY money_date
    </select>

    <select id="accountAnalysis" resultType="java.util.Map">
        select  c.class_name as name, sum(if(c.class_type = 1,m.money_pay,m.money_income))  as value
        from account_class c
                 left join account_money m on c.id = m.class_id
        where m.account_id = #{accountId,jdbcType=BIGINT}
          and m.deleted = 0
          and c.class_type = #{classType,jdbcType=VARCHAR}
        group by c.id, c.class_name
    </select>
</mapper>
